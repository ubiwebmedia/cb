///<reference path='./../core.d.ts'/>
declare module 'chargebee' {
  export interface Comment {
    
    /**
      * @description Unique identifier for the comment.

      */
    
    id:string;
    
    /**
      * @description Type of the entity this comment generated for \* item - Entity that represents item \* invoice - Invoice description \* product - Entity that represents product \* plan - Entity that represents a subscription plan \* item_family - Entity that represents item family \* transaction - Entity that represents a transaction. \* quote - Entity that represents a quote \* order - Entity that represents an order \* item_price - Entity that represents item price \* customer - Entity that represents a customer \* variant - Entity that represents product variants \* business_entity - Entity that represents item of type business entity \* coupon - Entity that represents a discount coupon \* subscription - Entity that represents a subscription of a customer \* addon - Entity that represents an addon \* credit_note - Credit note description

      */
    
    entity_type:EntityType;
    
    /**
      * @description The user who created the comment. If created via API, this contains the name given for the API key used.

      */
    
    added_by?:string;
    
    /**
      * @description Actual notes for the comment.

      */
    
    notes:string;
    
    /**
      * @description The time at which this comment was created

      */
    
    created_at:number;
    
    /**
      * @description Type of comment this is. \* system - Comment generated by Chargebee when any backend changes happen for an entity \* user - Comment generated by user either via API or Admin console.

      */
    
    type:'system' | 'user';
    
    /**
      * @description Unique identifier of the entity.

      */
    
    entity_id:string;
  }
  export namespace Comment {
    export class CommentResource {  
      /**
        * @description Create a new comment for an entity. The newly added comment will be shown in the web interface as well.

        */
      
      create(input:CreateInputParam):ChargebeeRequest<CreateResponse>;
       
      /**
        * @description Retrieve a comment for an entity identified by comment ID.

        */
      
      retrieve(comment_id:string):ChargebeeRequest<RetrieveResponse>;
       
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
      
      list(input?:ListInputParam):ChargebeeRequest<ListResponse>;
       
      /**
        * @description Delete a comment for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#create_a_comment_entity_type) identified by comment ID.

Only the comments that are added via Admin console and API can be deleted. Chargebee generated &quot;System&quot; comments cannot be deleted.

        */
      
      delete(comment_id:string):ChargebeeRequest<DeleteResponse>;
    }
    export interface CreateResponse {  
       comment:Comment;
    }
    export interface CreateInputParam {
       
      /**
        * @description Type of the entity to create the comment for. \* item - Entity that represents item \* order - Entity that represents an order \* item_price - Entity that represents item price \* customer - Entity that represents a customer \* variant - Entity that represents product variants \* invoice - Invoice description \* product - Entity that represents product \* business_entity - Entity that represents item of type business entity \* plan - Entity that represents a subscription plan \* coupon - Entity that represents a discount coupon \* subscription - Entity that represents a subscription of a customer \* item_family - Entity that represents item family \* transaction - Entity that represents a transaction. \* addon - Entity that represents an addon \* credit_note - Credit note description \* quote - Entity that represents a quote

        */
       
      entity_type:EntityType;
       
      /**
        * @description Unique identifier of the entity.

        */
       
      entity_id:string;
       
      /**
        * @description Actual notes for the comment.

        */
       
      notes:string;
       
      /**
        * @description The user who created the comment. If created via API, this contains the name given for the API key used.

        */
       
      added_by?:string;
    }
    export interface RetrieveResponse {  
       comment:Comment;
    }
    
    export interface ListResponse {  
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
       
       list:{comment:Comment}[];
       
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
       
       next_offset?:string;
    }
    export interface ListInputParam {
      [key : string]: any;  
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
        
      limit?:number;
       
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
        
      offset?:string;
       
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
        
      entity_type?:'item' | 'product' | 'coupon' | 'addon' | 'item_price' | 'business_entity' | 'subscription' | 'item_family' | 'credit_note' | 'quote' | 'variant' | 'invoice' | 'plan' | 'transaction' | 'customer' | 'order';
       
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
        
      entity_id?:string;
       
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
        
      created_at?:{after?:string,before?:string,between?:string,on?:string};
       
      /**
        * @description Retrieve the list of comments sorted by the recent ones on the top.

If you want to retrieve the list of comments for an [entity](https://apidocs.chargebee.com/docs/api/v1/comments?prod_cat_ver&#x3D;1#list_comments_entity_type), for example, subscription you can filter them by passing the entity type and unique identifier for that entity, for example, subscription ID.

        */
        
      sort_by?:{asc?:'created_at',desc?:'created_at'};
    }
    export interface DeleteResponse {  
       comment:Comment;
    }
    
    
  }
}