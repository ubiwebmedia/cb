///<reference path='./../core.d.ts'/>
declare module 'chargebee' {
  export interface PaymentIntent {
    
    /**
      * @description Identifier for PaymentIntent.

      */
    
    id:string;
    
    /**
      * @description Current status of PaymentIntent. \* in_progress - Status will be in_progress if the Active Payment Attempt state is in requires_identification, requires_challenge or requires_redirection. \* authorized - 3DS verification successfully completed. \* consumed - If any Chargebee operation such as create subscription etc. is completed using the intent, it will be in consumed state. Intent cannot be used if it&#x27;s already in consumed state. \* expired - Intent has expired, since it was not consumed before the predefined time-out. \* inited - Intent is initialized.

      */
    
    status:'consumed' | 'in_progress' | 'inited' | 'expired' | 'authorized';
    
    /**
      * @description The currency code (ISO 4217 format) of the amount used in transaction.

      */
    
    currency_code?:string;
    
    /**
      * @description Amount(in cents) to be authorized for 3DS flow.

      */
    
    amount:number;
    
    /**
      * @description The gateway account used for performing the 3DS flow.

      */
    
    gateway_account_id:string;
    
    /**
      * @description Timestamp indicating when the PaymentIntent will expire if left unconsumed.

      */
    
    expires_at:number;
    
    /**
      * @description Reference for payment method at gateway. Only applicable when the PaymentIntent is created for cards stored in the gateway.

      */
    
    reference_id?:string;
    
    /**
      * @description The payment method of this intent \* google_pay - google_pay \* apple_pay - apple_pay \* ideal - ideal \* bancontact - bancontact \* netbanking_emandates - netbanking_emandates \* dotpay - dotpay \* giropay - giropay \* sofort - sofort \* direct_debit - direct_debit \* paypal_express_checkout - paypal_express_checkout \* boleto - boleto \* card - card \* upi - upi

      */
    
    payment_method_type?:'giropay' | 'ideal' | 'sepa_instant_transfer' | 'google_pay' | 'netbanking_emandates' | 'dotpay' | 'boleto' | 'direct_debit' | 'faster_payments' | 'sofort' | 'upi' | 'venmo' | 'amazon_payments' | 'apple_pay' | 'bancontact' | 'paypal_express_checkout' | 'pay_to' | 'card';
    
    /**
      * @description The URL the customer will be directed to once 3DS verification is successful. Applicable only when &#x60;payment_method_type&#x60; is &#x60;ideal&#x60;, &#x60;sofort&#x60;, &#x60;dotpay&#x60; or &#x60;giropay&#x60;.

      */
    
    success_url?:string;
    
    /**
      * @description The URL the customer will be directed to when 3DS verification fails. Applicable only when &#x60;payment_method_type&#x60; is &#x60;ideal&#x60;, &#x60;sofort&#x60;, &#x60;dotpay&#x60; or &#x60;giropay&#x60;.

      */
    
    failure_url?:string;
    
    /**
      * @description Timestamp indicating when the PaymentIntent was created.

      */
    
    created_at:number;
    
    /**
      * @description Timestamp indicating when the PaymentIntent was last modified.

      */
    
    modified_at:number;
    
    /**
      * @description Version number of this resource. The &#x60;resource_version&#x60; is updated with a new timestamp in milliseconds for every change made to the resource. This attribute will be present only if the resource has been updated after 2016-09-28.

      */
    
    resource_version?:number;
    
    /**
      * @description Timestamp indicating when this payment intent was last updated.

      */
    
    updated_at?:number;
    
    /**
      * @description The unique ID of the customer for which this payment_intent should be created. If not provided, a new customer is created and its ID is autogenerated.  
**See also**

[Customer resource lookup and creation](/docs/api/payment_intents#customer_lookup)

      */
    
    customer_id:string;
    
    /**
      * @description Gateway associated with the PaymentIntent.

      */
    
    gateway?:string;
    
    /**
      * @description The unique ID of the [business entity](/docs/api/advanced-features?prod_cat_ver&#x3D;2#mbe) of this &#x60;payment_intent&#x60;   

      */
    
    business_entity_id?:string;
    
    /**
      * @description Active payment attempt for the PaymentIntent.

      */
    
    active_payment_attempt?:PaymentIntent.PaymentAttempt;
  }
  export namespace PaymentIntent {
    export class PaymentIntentResource {  
      /**
        * @description Creates a PaymentIntent object. This is to be used with Chargebee.js API to complete the 3DS flow for new or stored cards.

While creating, specify the appropriate gateway account and amount. Exact amount can be estimated using our [Estimate API](/docs/api/estimates).

#### Customer resource lookup and creation {#customer_lookup}

When [customer[id]](/docs/api/payment_intents#create_a_payment_intent_customer_id) is provided for this operation, it is looked up by Chargebee, and if found, the payment_intent is created for it. If not found, a new customer resource is created with the ID provided, and the payment_intent is created.

##### Multiple business entities

If multiple [business entities](/docs/api/advanced-features#mbe) are created for the site, the customer resource lookup and creation happen within the [context](/docs/api/advanced-features#mbe-context) of the business entity [specified](/docs/api/advanced-features#mbe-header-main) in this API call. If no business entity is specified, the customer resource lookup is performed within the [site context](/docs/api/advanced-features#mbe-context), and if not found, the resource is created for the [default business entity](/docs/api/advanced-features#mbe-default-be) of the site.

        */
      
      create(input:CreateInputParam):ChargebeeRequest<CreateResponse>;
       
      /**
        * @description Updating properties on a PaymentIntent object. All the subsequent 3DS transaction attempts will have the updated values.

        */
      
      update(payment_intent_id:string, input?:UpdateInputParam):ChargebeeRequest<UpdateResponse>;
       
      /**
        * @description Retrieves the PaymentIntent resource.

        */
      
      retrieve(payment_intent_id:string):ChargebeeRequest<RetrieveResponse>;
    }
    export interface CreateResponse {  
       payment_intent:PaymentIntent;
    }
    export interface CreateInputParam {
       
      /**
        * @description Sets the [context]() for this operation to the [business entity](/docs/api/advanced-features?prod_cat_ver&#x3D;2#mbe) specified. Applicable only when multiple business entities have been created for the site. When this parameter is provided, the operation is able to read/write data associated only to the business entity specified. When not provided, the operation can read/write data for the entire site.  
**Note**

An alternative way of passing this parameter is by means of a [custom HTTP header](/docs/api/advanced-features?prod_cat_ver&#x3D;2#mbe-header-main).  
**See also**

[Customer resource lookup and creation.](/docs/api/payment_intents#customer_lookup)

        */
       
      business_entity_id?:string;
       
      /**
        * @description The unique ID of the customer for which this &#x60;payment_intent&#x60; should be created. If not provided, a new customer is created and its ID is autogenerated.  
**See also**

[Customer resource lookup and creation](/docs/api/payment_intents#customer_lookup)
.

        */
       
      customer_id?:string;
       
      /**
        * @description Amount(in cents) to be authorized for 3DS flow.

        */
       
      amount:number;
       
      /**
        * @description The currency code (ISO 4217 format) of the amount used in transaction.

        */
       
      currency_code:string;
       
      /**
        * @description The gateway account used for performing the 3DS flow.

        */
       
      gateway_account_id?:string;
       
      /**
        * @description Reference for payment method at gateway. Only applicable when the PaymentIntent is created for cards stored in the gateway.

        */
       
      reference_id?:string;
       
      /**
        * @description The payment method of this intent. \* google_pay - google_pay \* boleto - boleto \* apple_pay - apple_pay \* ideal - ideal \* bancontact - bancontact \* netbanking_emandates - netbanking_emandates \* direct_debit - direct_debit \* card - card \* dotpay - dotpay \* giropay - giropay \* upi - upi \* sofort - sofort \* paypal_express_checkout - paypal_express_checkout

        */
       
      payment_method_type?:'giropay' | 'ideal' | 'sepa_instant_transfer' | 'google_pay' | 'netbanking_emandates' | 'dotpay' | 'boleto' | 'direct_debit' | 'faster_payments' | 'sofort' | 'upi' | 'venmo' | 'amazon_payments' | 'apple_pay' | 'bancontact' | 'paypal_express_checkout' | 'pay_to' | 'card';
       
      /**
        * @description The URL the customer will be directed to once 3DS verification is successful. Applicable only when &#x60;payment_method_type&#x60; is &#x60;ideal&#x60;, &#x60;sofort&#x60;, &#x60;dotpay&#x60; or &#x60;giropay&#x60;.

        */
       
      success_url?:string;
       
      /**
        * @description The URL the customer will be directed to when 3DS verification fails. Applicable only when &#x60;payment_method_type&#x60; is &#x60;ideal&#x60;, &#x60;sofort&#x60;, &#x60;dotpay&#x60; or &#x60;giropay&#x60;.

        */
       
      failure_url?:string;
    }
    export interface UpdateResponse {  
       payment_intent:PaymentIntent;
    }
    export interface UpdateInputParam {
       
      /**
        * @description Amount(in cents) to be authorized for 3DS flow.

        */
       
      amount?:number;
       
      /**
        * @description The currency code (ISO 4217 format) of the amount used in transaction.

        */
       
      currency_code?:string;
       
      /**
        * @description The gateway account used for performing the 3DS flow.

        */
       
      gateway_account_id?:string;
       
      /**
        * @description The payment method of this intent. \* google_pay - google_pay \* boleto - boleto \* apple_pay - apple_pay \* ideal - ideal \* bancontact - bancontact \* netbanking_emandates - netbanking_emandates \* direct_debit - direct_debit \* card - card \* dotpay - dotpay \* giropay - giropay \* upi - upi \* sofort - sofort \* paypal_express_checkout - paypal_express_checkout

        */
       
      payment_method_type?:'giropay' | 'ideal' | 'sepa_instant_transfer' | 'google_pay' | 'netbanking_emandates' | 'dotpay' | 'boleto' | 'direct_debit' | 'faster_payments' | 'sofort' | 'upi' | 'venmo' | 'amazon_payments' | 'apple_pay' | 'bancontact' | 'paypal_express_checkout' | 'pay_to' | 'card';
       
      /**
        * @description The URL the customer will be directed to once 3DS verification is successful. Applicable only when &#x60;payment_method_type&#x60; is &#x60;ideal&#x60;, &#x60;sofort&#x60;, &#x60;dotpay&#x60; or &#x60;giropay&#x60;.

        */
       
      success_url?:string;
       
      /**
        * @description The URL the customer will be directed to when 3DS verification fails. Applicable only when &#x60;payment_method_type&#x60; is &#x60;ideal&#x60;, &#x60;sofort&#x60;, &#x60;dotpay&#x60; or &#x60;giropay&#x60;.

        */
       
      failure_url?:string;
    }
    export interface RetrieveResponse {  
       payment_intent:PaymentIntent;
    }
    
    export interface PaymentAttempt {  
         /**
          * @description Identifier for PaymentIntent&#x27;s active payment attempt.

          */
       
      id?:string;
       
         /**
          * @description Current status of active payment attempt \* authorized - 3DS verification successfully completed. \* requires_challenge - The transaction has to go through 3DS Challenge flow and the customer needs to authenticate via 3DS 2.0 \* pending_authorization - Waiting for the authorization. \* requires_redirection - The transaction has to go through 3DS Redirection flow and the customer needs to authenticate via 3DS 1.0 \* inited - Payment attempt is initialized. \* refused - 3DS verification attempt failed. \* requires_identification - Customer&#x27;s device fingerprint is used to verify their identity. It needs to be sent to the Issuing Bank for verification.

          */
       
      status?:'pending_authorization' | 'inited' | 'refused' | 'requires_challenge' | 'authorized' | 'requires_identification' | 'requires_redirection';
       
         /**
          * @description The payment method of this attempt \* ideal - ideal \* sofort - sofort \* paypal_express_checkout - paypal_express_checkout \* giropay - giropay \* bancontact - bancontact \* google_pay - google_pay \* card - card \* upi - upi \* direct_debit - direct_debit \* dotpay - dotpay \* apple_pay - apple_pay \* boleto - boleto \* netbanking_emandates - netbanking_emandates

          */
       
      payment_method_type?:'giropay' | 'ideal' | 'sepa_instant_transfer' | 'google_pay' | 'netbanking_emandates' | 'dotpay' | 'boleto' | 'direct_debit' | 'faster_payments' | 'sofort' | 'upi' | 'venmo' | 'amazon_payments' | 'apple_pay' | 'bancontact' | 'paypal_express_checkout' | 'pay_to' | 'card';
       
         /**
          * @description Reference of PaymentIntent at gateway

          */
       
      id_at_gateway?:string;
       
         /**
          * @description Error code received from the payment gateway on failure.

          */
       
      error_code?:string;
       
         /**
          * @description Error message received from the payment gateway on failure.

          */
       
      error_text?:string;
       
         /**
          * @description Timestamp indicating when the active payment attempt was created.

          */
       
      created_at?:number;
       
         /**
          * @description Timestamp indicating when the active payment attempt was last modified.

          */
       
      modified_at?:number;
    }
  }
}